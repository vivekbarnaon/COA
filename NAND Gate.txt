NAND Gate Dataflow Model	
VHD Code:
entity NAND_DF is
 Port ( a : in STD_LOGIC;
 b : in STD_LOGIC;
 c : out STD_LOGIC);
end NAND_DF;
architecture Dataflow of NAND_DF is
begin
c<=a NAND b;
end Dataflow;
RTL Diagram	
TBW Code:	
entity NAND_DF_TBW is
-- Port ( );
end NAND_DF_TBW;
architecture Dataflow of NAND_DF_TBW is
component NAND_DF is
 Port ( a : in STD_LOGIC;
 b : in STD_LOGIC;
 c : out STD_LOGIC);
end component;
Signal a1:STD_LOGIC:='0';
Signal b1:STD_LOGIC:='0';
Signal c1:STD_LOGIC;
begin
UUT: NAND_DF Port map(a=>a1, b=>b1, c=>c1);
stim_proc: process
begin
wait for 100ns;
a1<='0';
b1<='0';
wait for 100ns;
a1<='0';
b1<='1';
wait for 100ns;
a1<='1';
b1<='0';
wait for 100ns;
a1<='1';
b1<='1';
wait;
end process;
end Dataflow;
#TBW Waveform

NAND Gate Behavioral Model	
VHD Code:
entity NAND_GATE_BV is
 Port ( A : in STD_LOGIC;
 B : in STD_LOGIC;
 C : out STD_LOGIC);
end NAND_GATE_BV;
architecture Behavioral of NAND_GATE_BV is
begin
process(A,B)
begin
 if(A='1' and B='1') then
 c<='0';
 else
 c<='1';
 end if;
end process;
end Behavioral;
RTL Diagram	
TBW Code:	
entity NAND_GATE_TBW is
-- Port ( );
end NAND_GATE_TBW;
architecture Dataflow of NAND_GATE_TBW is
component NAND_GATE_BV is
 Port ( a : in STD_LOGIC;
 b : in STD_LOGIC;
 c : out STD_LOGIC);
end component;
Signal a1:STD_LOGIC:='0';
Signal b1:STD_LOGIC:='0';
Signal c1:STD_LOGIC;
begin
UUT: NAND_GATE_BV Port map(a=>a1, b=>b1, c=>c1);
stim_proc: process
begin
wait for 100ns;
a1<='0';
b1<='0';
wait for 100ns;
a1<='0';
b1<='1';
wait for 100ns;
a1<='1';
b1<='0';
wait for 100ns;
a1<='1';
b1<='1';
wait;
end process;
end Dataflow;
#TBW Waveform